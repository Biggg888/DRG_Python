from drg_group.chs_drg_11.Base import message,intersect,SS_VALID
from drg_group.chs_drg_11.ADRG import RA1,RA2,RA3,RA4,RB1,RB2,RC1,RD1,RE1,RG1,RR1,RS1,RS2,RT1,RT2,RU1,RV1,RW1,RW2

def group(record):
  mdc_zd=["C88.700x013","C95.700x002","C95.004","Z51.102","C85.900x011","Z51.800x927","C91.600","C84.800","Z51.000x012","C96.501","C94.702","Z51.801","D48.700x015","C92.401","D48.700x023","C96.402","C92.601","C90.000x037","C84.500x012","C90.000x041","D46.201x001","Z51.000x008","C93.000x011","C91.100x012","D36.700x021","D47.100x017","C80.900","C81.100","C90.000x014","C77.800","C95.003","C93.300","C83.300x008","C92.100x018","C95.000x003","D46.100x012","D47.404","C90.000x023","C92.400x011","C96.601","Q85.909","C83.504","C92.103","C81.300","Z51.805","Z51.800x095","Z08.100","C86.603","C84.400","D89.801","Q85.802","C83.101","C83.300x007","C83.702","C83.300x006","C84.500x004","C45.100x005","C90.300x002","C92.000x014","C86.200","C88.700x002","C91.000x017","C85.709","Z51.500x001","Z51.000x013","C96.400x003","C91.000x009","C82.500","C83.300","C93.100x012","C81.703","C92.200","C94.700x014","C77.107","C77.206","Z51.800x951","C85.900x026","C91.400x013","C91.500x011","C84.000x003","C94.700x004","D48.715","C85.900x003","C95.005","C95.901","Z51.809","Z51.810","C82.600","C77.202","C83.803","C79.811","C77.400x001","C83.500","D36.700x028","D47.100x018","C85.900x042","Z08.200","C97.x01","C85.707","D46.600","Z51.807","C92.000x013","C92.101","C82.701","C85.100","C83.003","C83.505","C92.403","C95.700x011","D47.700x007","Z51.500x002","C96.400x004","C48.102","C82.700","C90.303","C46.900x002","C90.302","C76.200x002","C85.900x039","C83.800x006","C85.100x010","C82.704","C90.000x021","D46.700x001","Z51.001","C93.003","D09.900","Z51.800x922","C90.100x002","C92.100x019","C88.202","C94.201","C91.500","C85.900x017","C92.200x001","C92.006","C85.100x021","C92.706","C96.502","C85.900x012","D47.500","D47.200x004+G63.1*","C96.401","C91.000x015","C95.900","C95.900x013+M36.1*","C93.101","C92.502","C83.302","C76.101","C92.700x013","C81.900x005","C82.200","C91.000x016","C77.900x001","C95.006","C94.001","C84.700","Z08.800x001","D18.109","C76.300","C84.000x002","Z51.104","D48.900","C82.300","D46.700x007","Z09.100","C90.100x011","C91.002","C93.100x011","C45.706","C92.300x003","C91.007","C88.401","C95.000x018","C96.600","C91.701","C77.500","C91.900","C90.000x027","C77.502","C92.700x006","C90.000x012","C93.901","D46.203","C85.900x014","C79.800x816","C82.702","C88.402","C88.900x001","D46.100x002","D46.900x006","Z54.001","Z51.800x924","C94.000x001","C84.400x001","C88.301","C85.900x043","C85.900x005","C83.000","C80.904","C85.900x010","C92.300x011","C86.400","C77.302","C91.001","C88.200x012","C95.900x012","D47.701","C96.704","C85.900x001","C83.800x008","C88.700x003","Z51.002","C92.000x006","C90.000x031","C92.900x011","C91.700","Z51.100x004","C77.401","C91.100x011","C80.000","C82.100","Z51.802","C85.900x031","C96.400","C46.300","C95.000x115","C92.600","D18.105","C84.900","C90.000x008+M90.6*","D46.700x006","C88.203","C86.500","C77.303","C83.900","C93.102","D09.700x001","C90.300x001","Z51.800x096","Z51.800x952","D46.100","C90.000x029","C84.901","D47.400","C85.900x037","C80.905","Z51.804","C83.304","C95.700x001","C83.503","D36.700x011","D48.707","C88.201","C95.000","C90.000x036","C91.101","C93.100","C88.701","C90.000x035","C92.000x018","C91.000x007","C83.800x009","C92.000x015","C90.000","C90.000x024","Z51.808","C96.201","C88.000x011","C90.000x004","C86.300","C94.200x011","C85.900x038","C81.000","D45.x00","C94.400x001","C95.000x015","Z08.900","C91.102","C92.100x014","D47.401","C97.x00","C76.305","D47.100x008","C94.700","C93.103","C93.100x013","C93.900","C95.000x002","C85.900x027","C96.004","D47.101","D47.403","C85.900x016","C90.000x030","Z51.806","C96.002","C85.900x034","C92.100x017","C86.100","Z08.800x003","D46.200","C46.900x003","Z51.800x981","C84.402","D18.106","Z51.003","C79.800x818","Z51.800x094","C83.802","C77.300","C79.800x811","C81.700","D48.722","D48.708","C95.700x003","C92.900x001","C85.900x030","C92.100x011","Z09.200","C83.300x009","D46.500","D47.100x009","C83.700","D47.004","D47.300","D47.703","C83.102","C95.000x118","C85.900x029","C95.900x003+M36.1*","C92.001","D46.700","C84.000","D48.902","C92.703","C49.901","D36.711","D47.200x003","D47.900x001","C85.900x025","Z51.811","D47.100x004","C83.501","C90.200","C81.702","D48.901","C95.000x116","C83.502","C77.503","D36.709","Z51.800x983","D36.710","D47.003","C96.700","C81.900","C88.403","C92.900","C88.200","C94.000x011","C85.900x028","D46.001","C95.900x015","C88.900","Z08.700","D48.723","C96.202","C90.300x003","C92.009","C46.700","C96.200x013","C81.701","C91.400x004","C93.001","D47.700x006","C85.700x004","C78.604","C83.703","C91.400","C91.901","D47.700","D36.700x012","C88.700","C79.800x862","C84.403","C48.101","C95.000x016","C83.800","C79.900","C83.307","D46.700x002","C85.900x040","C91.000x006","D36.700x016","C94.300","C92.800","C95.002","C83.002","C85.701","C88.400","C84.600","D19.900x001","C79.829","C95.900x005","C92.300x013","C85.900x023","C93.002","C94.200","C85.900x019","C85.900x024","C85.700x016","D47.001","C95.100x012","C90.000x022","C85.900x013","Z51.101","C76.700x002","C96.604","C94.004","C79.826","D47.702","C91.006","C84.406","C77.301","C88.000","C85.900x006","C78.605","C90.200x013","C80.903","C90.200x009","C91.000","C90.100","C92.000","C91.401","C85.200","C90.000x032","C92.000x003","C96.705","D47.100x019","C92.100x004","C46.900","C90.002","C85.704","C96.200","C45.103","C77.205","C86.602","C92.700","Z51.800x092","C88.200x011","C88.000x002","C92.201","C76.306","D47.100","C77.300x003","C90.300x004","C94.400","D46.900x004","C82.900","C88.000x012","C96.200x005","C83.306","C80.901","D46.901","C96.900","C93.000x016","C79.900x001","C90.001","D47.000","D47.402","C84.100","D46.700x003","C85.901","D47.700x005","C92.402","C85.900x002","C93.701","D36.704","C95.000x017","C84.405","C90.000x009","C84.601","D47.900x002","C83.303","C92.500x011","C95.000x101","Z51.103","C86.601","C96.400x001","C90.300","C91.100","C92.100x016","C96.603","D09.700","C90.000x011","C94.300x011","C92.008","C94.703","Z51.800x097","Z51.800x925","Z51.800x953","C92.000x011","C83.801","C85.900x009","C90.301","C83.100","C92.000x012","C92.005","C90.000x034","C82.903","C79.800x804","Z08.800x004","Z51.200x008","Z51.500x003","Z08.800x002","C92.701","C88.302","C94.600","C85.900x041","C90.000x038","C91.000x012","C96.800","C46.900x004","C85.100x017","C85.900x036","C96.602","C84.407","C84.404","C90.000x039","C92.200x011","D46.400","C90.000x025","C84.500","D36.700x023","C85.900x008","C92.901","C82.703","C92.007","C90.000x033","C96.400x002","C96.403","D47.100x007","C77.200","C82.400","C95.100x011","C92.000x017","C85.900x015","C86.000","C92.000x016","C93.700","D48.716","C92.100x002","C92.100x012","C91.300","C85.900x020","D46.700x008","D46.900","C77.501","C84.502","C92.700x012","C90.200x008","C90.000x040","Z51.000x003","C76.801","C80.000x001","C94.202","D48.725","C96.500","C85.700","C96.000","C81.400","C82.000","C93.104","C83.001","C95.100","C90.000x028","C92.300x001","C45.900","C92.003","C84.401","C81.200","C88.300","C79.800x837","C85.705","D36.700x025","D36.705","C46.800","C91.800","C91.004","C85.900x022","C84.500x016","Z51.800x921","C85.900","C96.801","C91.008","C83.301","C76.800","C93.300x001","C83.004","C91.003","C92.002","D46.900x002","C83.305","C85.715","C80.902","C85.900x004","C77.900","C80.001","C92.501","D47.900","C90.000x005","C90.000x026","C92.100","C91.000x014","C76.302","C92.102","C91.704","C95.000x102","D47.002","C88.700x012","C82.901","C76.700","D47.200","C77.300x001","C95.000x117","D48.700x001","D19.700","C91.000x013","C92.100x001","C92.004","C86.600","D47.200x005+G63.1*","C92.300","Z08.000"]
  dept_list=[]
  if not (True and record.zdList[0] in mdc_zd):
    return ''
  
  message('符合MDCR入组条件，匹配规则：主诊断匹配')

  result=RA1.group(record)
  if result:
    return result
  result=RA2.group(record)
  if result:
    return result
  result=RA3.group(record)
  if result:
    return result
  result=RA4.group(record)
  if result:
    return result
  result=RB1.group(record)
  if result:
    return result
  result=RB2.group(record)
  if result:
    return result
  result=RC1.group(record)
  if result:
    return result
  result=RD1.group(record)
  if result:
    return result
  result=RE1.group(record)
  if result:
    return result
  result=RG1.group(record)
  if result:
    return result

  if False and record.ssList and intersect(SS_VALID,record.ssList):
    message('符合RQY入组条件，存在有效手术操作：'+','.join(set(record.ssList).intersection(SS_VALID)))
    return 'RQY'

  result=RR1.group(record)
  if result:
    return result

  result=RS1.group(record)
  if result:
    return result

  result=RS2.group(record)
  if result:
    return result

  result=RT1.group(record)
  if result:
    return result

  result=RT2.group(record)
  if result:
    return result

  result=RU1.group(record)
  if result:
    return result

  result=RV1.group(record)
  if result:
    return result

  result=RW1.group(record)
  if result:
    return result

  result=RW2.group(record)
  if result:
    return result

  message('不符合MDCR的ADRG入组条件')

