from drg_group.chs_drg_11.Base import message,intersect,SS_VALID
from drg_group.chs_drg_11.ADRG import HB1,HC1,HC2,HC3,HJ1,HK1,HL1,HL2,HR1,HS1,HS2,HS3,HT1,HT2,HU1,HZ1,HZ2,HZ3

def group(record):
  mdc_zd=["K86.800x001","S36.111","K74.400","B17.900x006","K86.106","K81.000","K83.306","Q44.704","K76.600x002","B18.203","E80.600x005","B16.200","K83.805","K80.100x001","Q44.002","K83.814","N82.302","K74.301+I98.2*","K85.809","K71.601","Q44.500x007","K83.006","K74.200","K76.901","K76.500x001","C78.800x009","K80.801","Q45.300x902","K75.806","K83.303","K92.800x010","K76.800x022","B45.800x001","E80.600x008","K70.901","T86.401","B00.803+K77.0*","C23.x00","K74.600x002","K74.603","K74.618+I98.3*","B16.202","K81.008","Q45.002","K82.808","M35.003+K77.8*","B65.904+I98.2*","B17.205","K85.816","D18.013","K83.502","K73.900","B26.300+K87.1*","K70.300","D37.602","Q44.101","K75.200","K83.100x008","K82.306","K76.800x003","C22.001","K72.904","Q44.200","B18.803","K76.602","K70.001","Q45.100","S36.200","N82.201","K74.600x041","K74.604","B18.800x002","D17.700x015","K74.606","K85.800x001","K85.802","B15.901","K72.100","K85.101","K86.814","Q45.001","C25.802","C45.704","K74.600x029","K76.801","K83.808","B17.800x003","K71.104","Q27.304","K76.102","Q44.102","Q44.505","K83.800x023","K83.109","E80.400","S36.200x092","Q44.300","K71.103","K80.501","R93.203","K74.611","C24.100","B18.004","B18.901","K75.801","D37.600x003","K91.500","K85.808","K82.301","K86.816","K83.400x001","K91.807","S36.100x001","Q44.705","T82.813","K83.004","K83.010","K80.302","D13.700x001","B25.200+K87.1*","B18.003","K85.000","K80.507","A06.400+K77.0*","K83.100x001","B25.101+K77.0*","K81.000x008","B54.x00x003+K77.0*","K71.701","B18.902","B58.100+K77.0*","K83.015","B17.800x001","I72.800x072","K85.818","E80.500","K73.801","K74.600x034","K86.100x002","K92.800x009","I82.001","B16.901","K80.300x005","B16.100x004","K80.203","D13.501","K83.104","D13.401","K86.200","B65.903+K77.0*","K74.607","T86.400x011","C24.000","I82.000x001","S36.200x091","B18.200","K83.013","Q44.503","K85.815","K74.600x030","K74.600x025","K85.900x002","K74.619+I98.2*","Q44.500x006","B15.003","K76.800x027","K71.901","K72.000x013","K82.001","K86.102","I74.804","Q44.400","M32.108+K77.8*","K74.605","K85.814","K71.200x001","B17.900x004","K75.003","Q44.003","K71.702","K75.810","K80.503","K86.809","Q85.912","K74.600x027","K82.304","K74.601","C22.400","Q44.301","D37.601","K72.900x003+G94.3*","K86.818","K82.900x002","K80.000x002","K80.400x004","B17.900x005","B15.900","K70.100","K72.004","K83.800x012","K80.303","B16.201","K70.304+I98.2*","R17.900x001","K85.902","S36.100x031","D13.400","B67.000x001+K77.0*","C25.800x001","K81.006","C24.900","K72.003","C77.204","C22.300","K71.900x003","K82.200x002","Q44.700x003","I77.000x017","K74.100","Q44.502","K85.817","K73.000x001","B16.000x001","B16.905","B18.100x007","K85.002","D37.705","R16.000x001","K91.800x407","K71.100x003","B16.902","K74.614","K80.506","K83.000","Q45.300x901","K91.806","K72.005","B19.002","K85.801","K91.827","K85.201","K86.800x002","C25.000","K83.007","K80.202","K85.803","K76.500x002","K72.000x004","K86.801","Q44.500x005","K86.817","K70.402","B17.801","K76.800x023","D37.700x003","K81.007","K82.305","K71.100x005","B17.904","B16.904","K70.201","Q45.200","C22.000","K71.002","K91.822","K76.814","D13.500x003","K75.001","B16.001","K76.800x015","K83.305","K91.825","C24.004","K72.000x005","I81.x00","A18.816+K87.0*","K76.101","C77.203","K80.000x004","C24.001","K85.901","C25.401","Q45.301","K81.900","B18.002","K82.300","B17.200","K76.700","K82.800x004","K75.300x001","B17.202","I86.809","K82.803","Q45.003","K86.300","K75.000","K74.600x010","K70.305+I98.3*","B18.104","K82.302","K76.803","K71.100","C24.002","K82.802","K74.610","B16.000","K71.000x002","K74.300x007+I98.2*","K83.811","K86.804","B18.202","K82.400","I87.121","K86.800x013","B17.100","K76.800x009","K82.800x009","K91.841","Q44.001","A18.301","K70.900","B18.900","K74.615+I98.3*","K85.900x003","T86.400x015","C24.003","E84.901","B19.001","K70.306+I98.3*","K91.800x411","B18.800x003","K71.001","K85.200","Q44.201","C78.808","K83.100","T86.400x004","K80.502","K83.809","B18.800x005","K83.815","B65.900x004+K77.0*","K74.616+I98.2*","C22.301","B18.000","D13.500","B17.900","K80.405","K83.307","B16.903","R93.204","K76.811","T85.800x802","B19.900","K86.803","K91.823","K85.202","K76.819","C25.803","T86.400x006","B16.100x003","K80.404","B18.804","K83.300","T86.400x017","Q44.700x004","D01.700","S36.100x041","K80.200x003","K76.813","T86.800x021","K76.500","K75.401","K74.602","K86.800x015","K86.101","K74.600x042","Q44.600","S36.210","B05.800x003+K77.0*","K76.001","K71.902+I98.2*","K81.005","B17.204","K82.804","K80.800x001","K74.620+I98.2*","B67.800x001+K77.0*","C25.300","C22.700","B19.000","D13.600","B17.000","D37.600x001","C25.100","K86.811","S36.200x021","K76.800x021","K85.900","K86.805","I87.109","K76.806","K76.807","K80.306","K65.007","K81.100","S36.110","R93.201","B18.001","K76.200","K83.012","S36.201","K80.403","K92.800x012","K74.612","K83.103","K91.800x401","K86.000","K75.400","C78.806","B44.803","T86.400x005","Q27.805","K71.300x001","K76.810","K83.800x009","K74.300x005+I98.2*","K75.901","E80.600x006","K91.840","K74.300x006+I98.3*","K83.000x007","K71.500x001","S36.100x051","E80.601","A18.817+K87.1*","E85.415+K77.8*","B18.903","I86.808","K70.303+I98.2*","K72.001","K83.301","K74.600x021","Q44.702","D18.000x031","K80.300x002","D37.706","B15.905","R16.200x001","C22.101","K71.600x002","K80.201","B18.204","E80.602","K82.805","K80.406","K73.100","K83.200x001","C24.000x007","K80.400","K80.401","E80.603","K76.900x002","K76.800x026","D37.605","A52.700x007+K77.0*","K71.100x006","B18.100","K83.818","B17.200x004","B15.000","K75.800x006","K83.014","B17.203","T86.400x003","D01.501","S36.101","K83.108","K74.302+I98.3*","K71.903+I98.3*","K80.002","T86.400x007","Q45.802","B16.100x002","B18.106","K74.617+I98.3*","K85.300","K75.000x002","E80.600x007","K76.400","C24.800","R93.302","S36.102","T86.400x016","K76.816","A52.705+K77.0*","K83.816","K80.305","K83.804","K83.807","K70.000","Q85.900x019","K85.807","C25.701","A18.815+K87.0*","K81.003","R94.500","K86.806","Q44.200x003","Q44.100x002","K91.826","C22.100","K92.801","D37.603","K74.600x003","K76.300","S36.100x081","K86.813","K83.106","K80.101","I72.809","K85.301","C25.900","B18.900x006","S36.200x031","B15.902","I81.x00x003","Q45.300x904","K83.009","B18.802","B17.102","R17.901","K83.800x022","B00.802+K77.0*","K74.600","C22.200","B67.500x001+K77.0*","B65.202+K77.0*","K76.000","K86.802","K71.100x007","K83.005","B18.800x001","K72.900x001","B17.100x003","A50.000x002+K77.0*","B17.902","K91.800x403","K76.603","B17.900x002","K73.200x002","C25.801","K80.500x001","K76.800x006","K86.100x001","B17.803","K70.403","B17.200x005","K71.100x008","K91.800x402","R17.900","K76.600x006","K83.820","K71.500x002","D13.500x001","S36.103","K82.303","K83.008","K76.804","K73.800x001","Q44.004","K83.302","K83.011","K86.901","Q44.501","R93.200x001","K74.608","D01.503","K83.817","B65.900x010+K77.0*","K82.100x002","B25.100+K77.0*","K75.803","K86.812","K85.821","K82.806","K86.810","K85.813","I77.100x011","K82.101","K83.101","R93.200x002","C24.800x001","K76.700x003","B66.301","B18.805","I74.800x016","A51.400x008+K77.0*","K81.001","K83.802","K86.100x004","T86.400x010","K81.101","B17.103","I87.803","K83.901","S36.100x021","K85.800x003","K70.401","K86.104","K92.800x006","K71.600","K83.102","K83.813","T86.400x009","B17.101","K76.815","K83.401","K91.800x301","K81.004","K76.601","K81.801","E83.102","B54.x00","K83.803","S36.112","B66.100x001+K77.0*","K82.900x001","D37.604","B15.002","K70.301+I98.2*","K85.800x002","B16.101","Q44.504","K82.807","K80.001","K73.901","K71.700","B15.001","K80.304","C24.101","B18.105","K72.902","T86.400x001","C78.807","K86.103","Z52.600x001","K71.102","K86.815","D37.600x004","K74.000","K75.300","K83.105","D37.600x002","T86.400x014","T86.400x013","B17.100x006","K81.900x001","C25.400","K83.819","K80.505","K86.807","Q44.700x002","C22.900","K82.801","D01.701","K83.107","K75.100","D01.502","K76.817","T86.400x018","B16.100","K80.402","K86.105","K81.002","C25.200","K82.200","I87.108","K74.300","K74.300x008+I98.3*","S36.100x011","K83.810","K71.400x001","K76.401","K71.800","K83.902","K82.000x003","K75.804","K85.302","K85.822","K83.017","K86.107","A18.814+K77.0*","K86.808","Q44.701","K72.002","S36.202","K71.900","B18.201","K82.000","K85.001","Q44.703","A01.001+K77.0*","K76.809","K75.002","K74.600x031","C78.700","T86.804","K74.500","Q27.800x004","K83.016","K76.805","R93.205","K76.800x007","D01.500x001","S36.200x011","T86.400x012","K76.818","T81.800x006","Q44.100x003","K80.504","K83.304","Q27.804","K70.400x002","K80.500x002","D13.701","K75.800x001","B18.801","E80.501","B17.800x002","K70.302+I98.3*","K91.800x304","K80.301","B19.901","K85.100","K80.200x001","K83.501","K76.700x001","B65.906+I98.3*","B16.203","S36.100x013","K83.018","K85.102","S36.200x001","Q85.900x044","B15.903","Q44.601","B26.802+K77.0*","K82.800x002","K83.001","K83.019","B16.204","S36.113","K76.808","B18.800x004","K76.600x007","I74.803","K74.613","K75.000x003","B18.107","K74.600x036","K75.805","K83.000x012","K71.101","B17.903","B18.200x009","Q85.911"]
  dept_list=[]
  if not (True and record.zdList[0] in mdc_zd):
    return ''
  
  message('符合MDCH入组条件，匹配规则：主诊断匹配')

  result=HB1.group(record)
  if result:
    return result
  result=HC1.group(record)
  if result:
    return result
  result=HC2.group(record)
  if result:
    return result
  result=HC3.group(record)
  if result:
    return result
  result=HJ1.group(record)
  if result:
    return result
  result=HK1.group(record)
  if result:
    return result
  result=HL1.group(record)
  if result:
    return result
  result=HL2.group(record)
  if result:
    return result

  if False and record.ssList and intersect(SS_VALID,record.ssList):
    message('符合HQY入组条件，存在有效手术操作：'+','.join(set(record.ssList).intersection(SS_VALID)))
    return 'HQY'

  result=HR1.group(record)
  if result:
    return result

  result=HS1.group(record)
  if result:
    return result

  result=HS2.group(record)
  if result:
    return result

  result=HS3.group(record)
  if result:
    return result

  result=HT1.group(record)
  if result:
    return result

  result=HT2.group(record)
  if result:
    return result

  result=HU1.group(record)
  if result:
    return result

  result=HZ1.group(record)
  if result:
    return result

  result=HZ2.group(record)
  if result:
    return result

  result=HZ3.group(record)
  if result:
    return result

  message('不符合MDCH的ADRG入组条件')

