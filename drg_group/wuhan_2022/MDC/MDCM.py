from drg_group.wuhan_2022.Base import message,intersect,SS_VALID
from drg_group.wuhan_2022.ADRG import MA1,MB1,MC1,MD1,MJ1,MR1,MS1,MZ1

def group(record):
  mdc_zd=["N45.903","I89.000x023","N43.302","N50.819","R86.900x003","D40.900x001","A54.204+N51.1*","C61.x00","D29.702","C63.801","Q55.400x006","N48.901","A57.x00x002","N48.101","E29.101","D40.100x002","Q53.200","N42.901","N48.804","A18.100x031","N49.102","N49.203","D40.701","N50.800x014","Q55.203","N50.816","A60.001","Q55.300","Q55.400x008","N48.102","D07.500","A57.x00x003","T83.600","C60.000","N45.906","N48.403","C63.702","N48.400","R86.200","C79.800x233","N44.x02","S31.300x002","S38.200x005","S31.301","D29.700x005","N45.904","C76.303","N50.101","N50.800x028","N50.804","N48.600","N50.814","A18.100x021+N37.8*","C79.818","N50.800x038","N48.402","Q96.300","Q55.901","C63.200","S31.200","N50.827","Q55.402","S39.904","N50.805","Q55.802","Q55.601","D29.001","N50.826","N50.824","N48.301","N50.821","N48.812","N45.001","N50.825","N45.002","N50.807","D29.300","N50.100x001","N48.401","N50.800x023","K65.013","Q55.404","N49.001","D07.401","Q55.600x008","N44.x00","S31.300x001","N43.301","N50.801","N50.810","N48.810","C79.819","D40.702","Q53.901","N48.202","A18.110+N51.8*","Q53.000x002","N50.818","N49.900","N48.800x009","N48.811","A59.000x003+N51.0*","C63.100","D07.402","N41.800","Q55.003","N50.900x007","Q55.200x901","N48.802","D48.127","A51.000x002","C79.815","A51.002","N49.101","N50.800x042","N50.902","Q53.100","Q55.801","N45.000","I86.100","D17.600x001","N50.800x041","Q55.602","N48.805","Q55.202","N48.400x008","N50.800x012","N50.806","R86.000","R86.100","C79.800x231","N45.902","N48.803","R86.700","A18.117+N51.1*","N43.100","Q56.400","Q55.800x001","A51.000","N50.000","A58.x00","Q53.202","S38.000","D18.000x818","N97.400x001","C63.900","D29.700x004","N43.300","N45.908","E11.400x360+G99.0*","Q55.501","N43.400","N48.300","S39.900x010","N42.801","N47.x02","N43.201","N50.800x002","E29.800","Q55.403","N43.001","N47.x03","N50.803","B45.800x002","N48.000x003","C62.001","Q55.606","D18.108","Q55.100x002","N50.813","C60.100","N41.900x001","N44.x01","N48.203","N49.205","Q55.001","C63.700","R93.802","S37.811","Q56.002","N50.800x016","R86.500","A51.001","N49.800","Q53.201","S37.910","I89.000x025","S30.203","C63.000","Q55.401","I87.120","N46.x00x007","E10.400x360+G99.0*","N46.x00","Q55.800","N43.101","C63.201","N46.x02","A18.118+N51.1*","Q56.300","C63.800","C60.901","D29.401","D40.000x001","N49.103","I89.008","N50.812","D29.200","N48.809","E29.102","R86.300","R86.800","I89.000x024","N50.800x027","R86.600","C60.800","A63.002","D07.601","N41.100","N49.104","R86.903","A18.116+N51.8*","A60.900","N48.000","T83.401","N48.100","S30.208","N49.002","Q53.100x001","D40.704","K65.015","Q85.900x032","D29.000","Q55.201","D40.703","N97.400x002","C63.701","N48.400x007","I89.000x022","N46.x01","S38.200x004","I86.200","R86.902","N42.300","S39.900x009","C79.820","N43.000","C62.000","N48.400x005","N48.400x006","D07.400","N50.103","N42.000","N45.905","Q53.902","T19.800x002","N50.800x001","N50.802","Q55.603","R86.901","Q55.900","N50.809","N50.815","Q55.600x007","D17.700x033","D40.101","Q53.900","S30.206","N41.900x002","N42.301","S30.202","N50.820","N42.101","Q53.101","Q55.002","C79.817","D17.700x034","D40.001","C60.900","D07.603","S38.200x003","C62.900","N49.201","C60.200","N50.900x005","N36.801","S37.804","Q53.000","D29.900","N41.000","S37.802","Q53.200x001","N50.102","A06.800x003","N48.001","Q56.001","S38.001","A06.800x004+N51.2*","L29.300","D07.602","N41.101","N48.807","Q55.605","N42.102","A18.119+N51.8*","A56.102+N51.1*","K65.014","Q56.000","R86.400","B37.402+N51.2*","N50.903","N48.201","A54.203+N51.1*","N41.200","N50.823","N50.822","Q55.101","S39.900x007","A18.109+N51.0*","N42.802","Q56.100","N48.800x005","Q53.000x003","Q55.405","S30.205","L29.100","B26.000+N51.1*","D29.100","D40.700x001","Q55.600x009","A60.000x004+N51.8*","N48.808","D40.700x002","I86.101","C60.201","A56.103+N51.1*","Q53.102","Q55.004","N49.204","S31.501","N50.901","N50.817","N48.806","D40.700x003","I89.800x010","N50.800x024","N48.500","N49.202","Z41.200","C62.100","N48.801","E29.000","N50.900x006","A18.100x020+N51.8*","A54.202+N51.0*","A18.100x018+N51.8*","C79.800x228","N48.813","D29.703","N50.800","N40.x00","C62.901","Z31.000x004","Q55.502","Q55.604","D18.000x815","I87.804","N50.800x025","N45.901","D29.400","N50.811","N47.x01","T83.601","S37.801","N48.204","N50.900x008","D29.701","N45.907","N50.808","E89.501","N42.200","C79.816","A60.003+N51.8*","N47.x00x001","N40.x01","D40.901","E14.400x360+G99.0*"]
  dept_list=[]
  if not (True and record.zdList[0] in mdc_zd and record.gender==1):
    return ''
  
  message('符合MDCM入组条件，匹配规则：主诊断匹配、男性')

  result=MA1.group(record)
  if result:
    return result
  result=MB1.group(record)
  if result:
    return result
  result=MC1.group(record)
  if result:
    return result
  result=MD1.group(record)
  if result:
    return result
  result=MJ1.group(record)
  if result:
    return result

  if False and record.ssList and intersect(SS_VALID,record.ssList):
    message('符合MQY入组条件，存在有效手术操作：'+','.join(set(record.ssList).intersection(SS_VALID)))
    return 'MQY'

  result=MR1.group(record)
  if result:
    return result

  result=MS1.group(record)
  if result:
    return result

  result=MZ1.group(record)
  if result:
    return result

  message('不符合MDCM的ADRG入组条件')

