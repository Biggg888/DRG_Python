from drg_group.wuhan_2022.Base import message,intersect,SS_VALID
from drg_group.wuhan_2022.ADRG import HB1,HC1,HC2,HC3,HC4,HJ1,HK1,HL1,HL2,HR1,HS1,HS2,HS3,HT1,HU1,HZ1,HZ2,HZ3

def group(record):
  mdc_zd=["M35.003+K77.8*","Q44.200","K74.620+I98.2*","K81.900","K71.100x007","K86.100x002","K86.803","K83.014","S36.100x031","K83.019","I74.803","B17.200x004","Q44.301","Q44.500x007","B19.001","Q45.300x902","B18.107","K81.900x001","K83.814","K83.010","K85.201","K86.816","K71.103","K80.502","B17.803","S36.200x092","B16.100x004","K91.800x401","K82.100x002","K85.901","K86.807","K80.300x005","K82.200x002","B17.800x003","K76.601","K81.101","K85.100","D01.700","K91.841","E83.102","B77.800x004","C78.808","K85.900","B66.800x007","K80.400x004","K82.302","K83.000","T81.800x006","K76.819","B17.900x006","K76.804","R93.302","K74.400","K74.615+I98.3*","K75.800x001","A06.400+K77.0*","K72.003","K76.500","K86.815","I74.800x016","K83.104","T86.400x005","B15.003","K72.000x005","K76.816","R94.500","K76.401","T86.804","B77.800x005","K75.300","K82.200","B18.802","K70.401","K72.904","K74.200","K75.000x003","K80.000x004","T86.400x011","K76.800x007","R16.000x001","B66.100x001+K77.0*","K80.203","C25.900","K91.800x402","S36.100x021","B65.900x004+K77.0*","K81.007","B18.901","K82.801","B17.900","K72.000x004","K71.200x001","K71.600x002","C24.001","B26.300+K87.1*","K83.810","K86.800x001","K76.813","K80.400","K83.017","R93.200x002","K91.800x411","K74.300x007+I98.2*","Q44.701","K76.806","K75.300x001","D01.500x001","K75.100","K75.800x006","D37.602","K83.808","K83.811","C22.001","K76.500x001","D13.500","B77.803","K83.819","B17.202","K86.818","K71.400x001","C24.002","K70.306+I98.3*","Q45.802","T86.400x013","K75.810","I87.109","K76.700","T86.400x016","K76.901","K76.102","K85.807","B66.301","B00.802+K77.0*","E85.415+K77.8*","E80.400","K80.201","K82.804","S36.200","D37.705","K85.800x003","D13.401","Q45.003","K80.202","C25.803","K86.100x004","Q44.703","K86.810","K75.000x002","K76.805","B17.904","E80.600x005","K71.500x001","R93.203","K71.900","C23.x00","B19.002","S36.201","B18.803","B26.802+K77.0*","D37.601","K91.840","K76.800x015","B17.100x006","K70.303+I98.2*","Q44.702","A52.700x007+K77.0*","Q27.804","B19.000","B67.800x001+K77.0*","K74.300x006+I98.3*","K76.700x003","K80.504","K81.000x008","K83.401","Q85.912","K74.600x027","I86.808","T86.400x018","B17.903","K71.100x008","K83.004","Q45.002","B16.903","C24.003","K71.100x005","D37.603","K71.600","K76.800x006","S36.102","K83.018","B18.900","Q44.300","B16.201","K74.300x008+I98.3*","S36.113","T86.400x004","K83.820","D13.701","K71.102","I74.804","K83.800x023","K83.006","K72.002","B65.906+I98.3*","K85.818","Q44.500x006","Q44.502","B17.203","K74.600x029","A18.815+K87.0*","K73.800x001","K86.808","C22.000","C24.000","K83.009","K76.200","C25.801","K83.501","K74.500","K76.900x002","D37.605","E80.601","K75.000","B17.101","C25.100","D37.706","D17.700x015","K82.900x002","S36.200x001","K91.800x301","B18.200x009","K76.803","K76.603","K83.800x009","K86.106","A18.816+K87.0*","K74.605","K80.501","B67.500x001+K77.0*","I81.x00","Q44.503","K86.103","K83.016","S36.111","K74.600x002","K76.600x007","K86.300","K76.600x006","K86.800x013","A18.301","K71.601","B66.902","C25.401","K73.901","K72.900x003+G94.3*","C24.101","B19.900","K74.600x041","Q44.400","C78.806","Q44.704","T86.400x001","K91.826","K91.807","K81.100","C24.004","I82.001","R93.205","C22.200","K83.101","K86.809","R17.900x001","K73.900","K80.300x002","B18.902","B16.202","K74.608","K81.003","B16.901","B16.001","B18.800x002","D13.500x001","K70.302+I98.3*","Q44.100x003","B16.200","B15.000","C25.802","K83.902","K91.500","K74.100","K74.600x030","B19.901","B18.801","B18.800x004","K75.806","K83.102","K83.800x012","R17.901","K76.800x022","B16.000","I72.800x072","Q44.700x002","T86.400x015","C78.807","S36.103","T86.400x014","E80.602","K86.812","Q45.100","Q85.911","Q44.101","K83.106","K91.822","B16.902","K70.402","K71.800","K83.816","K85.900x002","T86.400x010","K82.000x003","K83.809","K74.611","K82.303","B16.101","K85.821","C25.701","R16.200x001","K82.001","K80.406","K86.814","K86.805","B00.803+K77.0*","K80.503","K82.800x002","B65.900x010+K77.0*","B67.000x001+K77.0*","C25.400","R93.201","B18.204","D18.000x031","K72.100","K82.101","K72.001","Q44.601","K76.001","K83.901","K80.306","K83.103","I82.000x001","K71.700","K76.814","K71.001","D37.600x004","K86.101","K81.008","K86.802","M32.108+K77.8*","T86.401","Q27.800x004","I81.x00x003","B25.100+K77.0*","B17.103","K80.402","B18.804","B18.000","K86.817","B17.200x005","K85.808","D13.400","K80.100x001","Q85.900x044","K74.300x005+I98.2*","B16.905","K82.800x009","C45.704","K83.107","K85.000","B17.205","K83.802","K70.300","K82.301","Q27.304","K82.306","K83.005","B18.800x005","K71.100","K92.800x012","K91.800x304","B18.203","K76.811","S36.100x001","K73.200x002","K75.002","K86.804","B17.800x002","Q44.505","K76.817","K86.107","K74.000","K82.807","K91.823","K71.000x002","A18.817+K87.1*","Q44.002","E80.501","K74.604","K74.612","B16.100x003","K70.100","B17.801","K83.307","K74.600x021","S36.100x011","S36.200x091","B25.101+K77.0*","K85.200","Z52.600x001","K80.404","K81.006","K74.302+I98.3*","K80.200x003","A18.814+K77.0*","S36.100x041","K75.401","K75.801","K80.507","K81.001","K80.801","K83.100x001","K80.303","K85.800x002","K70.901","A51.400x008+K77.0*","K80.101","B18.202","D01.503","Q45.001","B18.200","I77.100x011","K83.001","K83.303","K70.304+I98.2*","K82.900x001","B15.900","C24.100","B15.001","T86.400x012","Q44.004","K83.305","A01.001+K77.0*","B17.204","B18.004","C22.900","K76.800x021","K86.811","B16.100","K82.803","K91.827","K85.822","K76.101","Q45.301","K85.815","K76.000","T86.800x021","B18.104","E80.603","K83.304","B01.801","B45.800x001","K82.304","B54.x00x003+K77.0*","K71.500x002","D01.501","B15.902","K74.617+I98.3*","K83.804","S36.110","K76.400","K83.108","K80.506","K85.301","K74.613","R93.200x001","K75.400","B15.903","K74.600x034","K85.002","S36.101","K74.601","K85.001","C22.101","K70.900","K71.902+I98.2*","Q44.501","K83.000x007","K80.000x002","K85.102","B17.100","B49.x00x021","K83.000x012","K83.800x022","K75.003","K80.301","K80.200x001","K82.806","B58.100+K77.0*","K83.502","K74.301+I98.2*","K85.902","D13.500x003","K81.004","C25.300","B18.100x007","K71.104","D01.701","K72.005","K70.400x002","Q44.100x002","B17.000","K72.900x001","B66.300x001","A42.803","S36.100x013","Q44.700x004","C24.000x007","T86.400x007","B17.102","B18.900x006","Q44.201","K71.101","B25.200+K87.1*","K80.401","K85.809","K92.800x006","K76.600x002","K71.300x001","S36.112","K73.100","B18.001","C25.800x001","S36.100x051","K82.000","Q27.805","B66.300","C77.204","K85.300","C24.800x001","K76.800x003","D13.600","C78.800x009","K72.004","I72.809","K74.600x025","K85.817","K85.900x003","K75.200","S36.202","Q45.300x901","K86.800x015","K70.000","K86.901","D37.700x003","K70.301+I98.2*","K74.610","K82.800x004","S36.210","A01.000x014","D37.600x003","K83.815","C22.100","C77.203","K76.815","K82.400","K71.701","B05.800x003+K77.0*","A01.000x011","K83.818","K74.607","K83.109","K86.105","K76.818","K85.803","B18.100","K74.600x031","K76.807","B18.003","K74.600x042","K76.801","K85.202","K81.002","T86.400x006","K72.000x013","Q85.900x019","T86.400x017","K76.602","K74.602","K83.817","B69.802","K83.100","T86.400x003","B15.905","K74.606","B17.902","D37.604","B18.800x003","K81.801","K85.816","K80.304","B18.201","K82.802","I77.000x017","Q45.300x904","Q44.200x003","Q44.003","B65.903+K77.0*","K80.001","B65.202+K77.0*","E80.600x006","K73.000x001","K80.403","B18.800x001","K71.100x006","K80.405","K82.808","K70.305+I98.3*","K75.805","B16.904","E80.600x008","S36.100x081","K82.305","I87.108","K70.201","K75.804","T86.400x009","K91.800x403","K74.614","Q44.500x005","C22.400","I87.803","C22.700","D18.013","K86.806","D13.700x001","K85.801","K91.800x407","K92.800x009","B83.800x003","K85.802","K70.001","K81.000","B17.900x002","K82.300","C22.301","K83.008","B17.200","K74.600","K76.808","K85.302","K80.302","K86.801","K83.301","B77.800x002","K83.306","Q45.200","K65.007","K74.600x010","K80.305","K92.800x010","B65.904+I98.2*","K74.300","K74.603","K75.803","K91.806","A52.705+K77.0*","K83.803","B18.805","D13.501","K83.300","C25.000","B16.204","D37.600x001","K83.805","S36.200x031","B16.203","B18.002","E80.500","K83.105","K76.800x026","K86.102","K76.809","B15.002","B17.900x004","Q44.705","B17.800x001","B18.106","S36.200x011","B15.901","E80.600x007","K75.901","K76.800x009","K85.800x001","K73.801","K83.013","B17.100x003","Q44.001","B16.100x002","K71.901","D37.600x002","R93.204","C78.700","K80.500x001","K86.800x002","B18.105","K80.505","K80.800x001","B16.000x001","K71.002","B44.803","K83.011","K71.702","K86.813","K74.619+I98.2*","K75.001","K70.403","K86.200","Q44.700x003","K71.100x003","K74.616+I98.2*","K86.104","K83.302","K85.101","I87.121","Q44.504","K83.015","K85.813","K83.007","K83.100x008","K71.903+I98.3*","K86.000","A50.000x002+K77.0*","K76.800x027","S36.200x021","K74.600x036","K85.814","K86.100x001","Q44.600","D01.502","Q44.102","T85.800x802","B17.900x005","B18.903","C22.300","K83.807","K76.810","K76.800x023","K76.300","K80.002","K80.500x002","K83.813","K83.200x001","C25.200","T82.813","K74.600x003","K76.500x002","K81.005","K76.700x001","K83.012","K72.902","C24.800","K71.900x003","C24.900","K83.400x001","K91.825","K82.805","K74.618+I98.3*","I86.809"]
  dept_list=[]
  if not (True and record.zdList[0] in mdc_zd):
    return ''
  
  message('符合MDCH入组条件，匹配规则：主诊断匹配')

  result=HB1.group(record)
  if result:
    return result
  result=HC1.group(record)
  if result:
    return result
  result=HC2.group(record)
  if result:
    return result
  result=HC3.group(record)
  if result:
    return result
  result=HC4.group(record)
  if result:
    return result
  result=HJ1.group(record)
  if result:
    return result
  result=HK1.group(record)
  if result:
    return result
  result=HL1.group(record)
  if result:
    return result
  result=HL2.group(record)
  if result:
    return result

  if False and record.ssList and intersect(SS_VALID,record.ssList):
    message('符合HQY入组条件，存在有效手术操作：'+','.join(set(record.ssList).intersection(SS_VALID)))
    return 'HQY'

  result=HR1.group(record)
  if result:
    return result

  result=HS1.group(record)
  if result:
    return result

  result=HS2.group(record)
  if result:
    return result

  result=HS3.group(record)
  if result:
    return result

  result=HT1.group(record)
  if result:
    return result

  result=HU1.group(record)
  if result:
    return result

  result=HZ1.group(record)
  if result:
    return result

  result=HZ2.group(record)
  if result:
    return result

  result=HZ3.group(record)
  if result:
    return result

  message('不符合MDCH的ADRG入组条件')

