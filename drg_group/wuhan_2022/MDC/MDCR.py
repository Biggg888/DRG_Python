from drg_group.wuhan_2022.Base import message,intersect,SS_VALID
from drg_group.wuhan_2022.ADRG import RA1,RA2,RA3,RA4,RB1,RC1,RD1,RE1,RF1,RR1,RS1,RS2,RT1,RT2,RU1,RU2,RV1,RW1,RW2

def group(record):
  mdc_zd=["C88.403","C46.900x003","C84.500x004","Z85.800x002","C92.901","C95.003","C95.002","Z51.800x096","Z85.800x005","D20.100","C90.302","D18.011","Z51.100x004","Z51.800x094","C92.100x002","D48.724","C92.008","C79.807","C96.000","Z85.803","C95.900","D47.403","C81.900","Z85.300x001","C92.000x018","Z51.500x002","C93.001","C84.404","C45.700","Z51.000x012","D47.100x019","C81.200","C88.401","C79.829","C91.401","C92.000x013","D20.103","D48.725","C95.000x101","C76.302","D47.200x004+G63.1*","C92.009","C95.000x102","C95.000x118","C91.901","C94.300","D46.700x008","D46.600","C85.900x017","C84.400","Z85.000x008","C83.500","D48.713","C90.000x033","C91.003","D44.701","C83.000","C90.000x023","C92.700x013","C77.302","D17.702","D36.704","C46.900x002","C46.700","C46.800","Z85.404","C92.103","C88.700x013","C76.200","Z85.503","C90.000x039","C90.000x024","Z85.000x001","Z86.001","C83.300","C96.704","C96.801","D09.700x002","D44.601","D15.701","C91.100x012","C92.001","Q85.909","C90.000x029","D38.300x003","Z51.000x008","Z51.810","C94.700","C97.x01","D18.012","D36.700x008","D36.709","C84.500","C76.306","C85.900x034","C94.000x001","C92.100x004","C88.402","Z85.800x011","C90.000x027","C94.000x011","Z51.800x921","C82.700","C85.100x021","C96.501","Z85.004","C83.900","C90.000x038","Z86.003","C84.407","D47.703","Q85.806","C95.900x005","C83.300x006","C92.004","D36.700x023","C85.900x008","C90.000x009","C90.000x036","D20.000x002","C96.900","C83.505","D36.700x024","Z51.800x097","C48.100x006","D38.300x001","C92.000x016","C86.100","D47.702","D48.723","C81.703","D46.900x004","C79.827","C93.100","C84.700","C76.801","C78.600x004","C83.003","C91.300","C94.702","C83.301","Z51.801","C90.000x037","C48.201","Z85.900","C90.200","C92.003","D48.400x002","D47.004","C91.400x013","C48.104","C88.301","C88.200x012","Z85.800x003","C92.403","C79.821","C90.000x040","C82.702","C86.601","C96.400x003","C91.500","C84.403","C85.900x014","C85.900x025","C76.401","C92.502","C79.809","C92.700x006","D46.900x002","C81.100","C86.500","C91.000","C91.000x015","C88.200","Z85.008","C77.500","D20.101","C92.300x011","C90.200x013","C76.304","C84.600","D47.700x006","D46.700x002","C85.900x015","C90.000x021","C94.600","Z85.502","C48.000x002","C90.301","C76.300x009","Z85.807","C81.300","D15.200","C85.900x011","D36.700x036","C77.501","C85.707","C84.000","C88.700","D46.901","C79.800x811","C83.800x009","C83.703","R58.x00x005","C96.202","C77.107","C83.001","C79.800x813","C88.000x011","C78.605","C96.200x005","C95.900x015","C79.800x837","C92.400x011","D48.700x010","C90.000x041","C97.x00","C84.405","C95.000","C90.001","Z51.104","C85.700x004","C83.801","D47.700x005","C93.901","C94.700x014","C76.701","C78.201","C96.403","C83.700","C85.100x010","C85.100x017","C82.900","D47.900x001","Z51.000x013","C90.000x035","D36.715","C76.700x002","C95.000x116","C94.202","C82.703","C84.500x016","D48.700x019","Z85.006","D47.001","C91.102","C90.000x005","C93.300","C96.604","C92.700x012","C85.900x028","C79.800x838","C91.800","D47.100x017","C83.304","D47.200","C91.100x011","C92.701","C95.901","C92.900x011","D36.711","C88.201","D48.700x016","Z51.001","C85.900x029","C77.800","C76.101","C48.105","C92.200x011","C88.900x001","C77.301","C90.100","C96.004","C92.007","C77.900x001","C86.000","C85.900x030","D19.100","C88.701","C92.101","D47.400","D47.701","C95.700x003","C79.800x817","C90.100x011","C95.100x011","D18.105","Z51.808","C92.100x017","C95.005","C85.100","C88.000","Z08.800x001","C45.100","C91.700","Z85.600x001","C88.200x011","D19.900x001","Z51.811","C96.502","C95.000x003","C92.300x001","C45.700x002","C85.704","C79.826","Z51.800x983","C77.205","C85.700x016","D48.700x013","C80.004+G73.1*","D47.000","C77.206","C94.400x001","Z09.200","C76.100x003","Z85.002","D36.700x019","Z51.102","Z51.800x095","Z85.408","C82.500","C90.300x004","C91.004","C92.100x001","C79.800x818","C91.600","D17.500","Z85.800x006","C84.400x001","D15.700","Z08.900","C80.904","C92.700","Z85.007","D15.200x002","D48.714","D36.713","C76.500","C85.705","C46.100","C88.700x012","Z85.003","C95.006","C96.700","C96.200","D47.100x004","Z51.805","D44.703","C84.601","C85.900x023","C92.100x019","D48.709","Z85.201","D36.718","Z86.002","C86.400","C77.300x001","C92.201","C88.302","C94.200","C95.000x018","C93.104","D36.706","C90.002","Z51.800x927","C92.000x014","D48.400x003","D20.000","D48.718","C85.900x010","C79.800x816","C48.100","D47.700x007","C92.000x012","D48.700x023","C92.100x012","C85.901","C91.900","C92.100","C91.000x007","C85.900x016","Z85.204","C95.000x016","D48.719","Z51.000x003","C76.503","Z08.800x004","C95.700x011","D47.900x002","C92.000","D48.710","D36.714","C85.900x009","C77.401","C90.000x012","C91.006","C45.100x005","C92.200","C83.101","D48.717","C82.701","C90.000x011","D47.200x003","Z51.800x952","C85.900x002","C80.901","C78.604","C83.702","C88.202","D46.900x006","C77.300","C95.900x013+M36.1*","D36.700x011","D38.301","C90.000x008+M90.6*","C91.400x004","C93.103","C92.601","D47.404","C86.300","C48.000","C90.000x022","C86.600","D47.300","C85.709","C96.002","C91.002","D47.402","C83.100","C94.200x011","Z51.101","C83.300x008","D47.100x007","C85.900x020","C91.000x012","C85.900x040","D15.900","Z51.800x953","C76.100","C95.900x003+M36.1*","C90.303","C96.602","Z51.800x925","C91.704","C79.900x001","D47.101","C82.704","C85.900x043","C80.903","D48.100x008","D48.301","C92.200x001","D48.300x001","C77.503","D36.700x021","Z51.002","C90.000x026","C91.000x017","D36.700x038","C85.900x037","C84.100","C92.100x016","C79.800x804","C92.900x001","Z85.101","D19.000","C91.001","Z85.810","C85.900x036","C91.000x013","C78.602","D47.500","D48.700x004","Z09.100","C94.001","C96.400x002","C95.000x015","C90.000x034","C92.100x018","C83.002","D36.700x018","C86.602","C92.002","C83.004","C82.100","C90.300x002","D17.400x001","D09.700x001","C92.401","C93.900","C85.900x027","C92.703","Z08.200","C85.900x026","C92.300x003","C84.901","D47.200x005+G63.1*","C90.200x008","D36.700x030","D46.700x007","C95.900x012","Z51.500x003","D47.700","Z51.800x981","Z51.804","Z85.500x002","C85.900x031","C91.701","D36.705","C79.800x834","C85.900x022","D46.700x006","C81.400","C88.900","D36.710","C76.300x001","C79.900","C82.300","C92.600","D36.700x029","C91.400","C84.502","C91.008","D36.716","D47.900","D48.700x015","C46.900x004","C84.800","C46.900","C75.400","C85.900x013","C93.100x012","C92.006","C96.200x013","D36.707","C81.702","C84.500x012","C83.800x008","C95.000x017","C96.603","Z51.800x951","Z85.001","C91.007","Z85.409","Z85.700x001","D48.700x005","C85.900","C76.402","C85.900x024","D36.700x013","D47.100","C84.000x002","D18.106","Q85.802","D15.200x001","Z85.100","Q85.900x016","C79.800x862","C84.402","D48.900","C83.307","C82.200","D46.700x001","Q85.900x015","D47.003","C88.203","Z85.005","Z85.804","C83.800x006","C90.000x014","D47.100x008","C94.400","C45.706","D48.401","D48.700x001","C83.303","C92.000x015","C85.715","C93.000x016","Z85.205","Z51.500x001","C77.502","C94.700x004","C84.401","C88.300","C94.703","D17.400","C84.000x003","C94.004","D44.700x002","D48.720","C96.400x004","C82.400","Z85.403","C78.601","C76.200x002","C82.000","C93.101","C83.305","Z92.600","C93.102","C92.706","Z51.103","C76.501","C88.700x003","C88.000x012","C82.901","C83.302","D47.100x018","C80.905","C95.700x001","C81.000","C83.502","C76.305","C93.700","Z51.800x924","Z85.400x003","C90.000x028","C92.100x011","Z51.003","C94.300x011","C76.400","C79.800x809","C90.000x030","C93.000x011","C91.500x011","D48.722","C96.600","C96.705","C77.400x001","C88.400","Z85.407","C95.100x012","D36.708","Z08.800x003","C92.300","D09.900","Z85.400x008","C82.600","C83.501","C83.300x007","C80.902","Q85.801","C92.500x011","Z51.809","Z85.402","C85.900x003","C91.000x006","C77.200","C84.900","Z54.001","C86.200","C83.102","D36.700x009","Z08.000","D36.717","C85.700","C96.500","Z51.200x008","C93.003","C90.000x031","D48.707","C48.800","D47.100x009","C81.900x005","C81.700","C85.900x041","C83.503","C92.000x017","C77.202","D36.700x032","D47.401","C91.101","C76.300","C92.501","C92.300x013","C83.802","C85.900x005","C96.601","Z85.203","Z85.009","C96.800","D36.700x014","Z85.808","C76.502","C90.000x004","C90.000x032","C86.603","Z85.805","R58.x00x007","C93.100x013","C77.300x003","D46.900","Z85.501","Z51.800x922","Z51.806","C85.701","C88.700x002","C77.303","C90.300x003","C91.000x014","C96.400x001","C92.402","D46.700","C85.900x012","C90.000x025","C92.800","C92.900","C93.002","C81.701","C90.000","D36.700x016","C92.000x006","C95.100","C93.701","Z85.500","Z85.802","C92.100x014","Z85.701","C82.903","C83.803","C85.900x001","C83.306","C91.000x016","C91.100","C95.000x002","C83.504","C85.200","Z51.800x092","C85.900x019","C90.300x001","C93.100x011","Z85.801","C48.200","D45.x00","C84.406","C96.201","D46.700x003","C90.100x002","Z85.401","C83.800","Z51.807","C45.103","C96.401","C49.901","D48.715","Z85.406","D48.716","C90.300","Z85.809","Z51.802","C85.900x042","C93.300x001","D36.712","C95.000x115","Z08.100","C91.000x009","C83.300x009","C85.900x006","C96.200x006","C88.000x002","C92.000x003","C76.702","Z08.800x002","Z85.806","C94.201","Z08.700","C95.004","D36.700x035","C77.900","D38.300x002","C95.000x117","C92.005","C80.900","C92.000x011","C90.200x009","C45.900","C85.900x004","C92.102","D17.701","C96.402","D47.002","D48.708","C79.811","C48.103","C46.300","C95.700x002","C96.400","D36.700x012"]
  dept_list=[]
  if not (True and record.zdList[0] in mdc_zd):
    return ''
  
  message('符合MDCR入组条件，匹配规则：主诊断匹配')

  result=RA1.group(record)
  if result:
    return result
  result=RA2.group(record)
  if result:
    return result
  result=RA3.group(record)
  if result:
    return result
  result=RA4.group(record)
  if result:
    return result
  result=RB1.group(record)
  if result:
    return result
  result=RC1.group(record)
  if result:
    return result
  result=RD1.group(record)
  if result:
    return result
  result=RE1.group(record)
  if result:
    return result
  result=RF1.group(record)
  if result:
    return result

  if False and record.ssList and intersect(SS_VALID,record.ssList):
    message('符合RQY入组条件，存在有效手术操作：'+','.join(set(record.ssList).intersection(SS_VALID)))
    return 'RQY'

  result=RR1.group(record)
  if result:
    return result

  result=RS1.group(record)
  if result:
    return result

  result=RS2.group(record)
  if result:
    return result

  result=RT1.group(record)
  if result:
    return result

  result=RT2.group(record)
  if result:
    return result

  result=RU1.group(record)
  if result:
    return result

  result=RU2.group(record)
  if result:
    return result

  result=RV1.group(record)
  if result:
    return result

  result=RW1.group(record)
  if result:
    return result

  result=RW2.group(record)
  if result:
    return result

  message('不符合MDCR的ADRG入组条件')

